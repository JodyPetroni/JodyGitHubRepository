name: shared_dotnet_dotnet_restore_cache
inputs:
  sdkVersion:
    required: false
    type: string
  projectFile:
    required: false
    type: string
  buildVersion:
    required: false
    default: "$(buildVersion)"
    type: string
  enableCaching:
    required: false
    default: true
    type: boolean
  publishArtifact:
    required: false
    default: nuget-packages
    type: string
  baseDirectory:
    required: false
    default: ''
    type: string
  baseDirectoryForCache:
    required: false
    default: "**"
    type: string
  artifactoryServiceConnection:
    required: false
    type: string
  artifactoryNuGetRegistry:
    required: false
    type: string
runs:
  using: composite
  steps:
  - uses: actions/checkout@v4.1.0
  - uses: "./.github/actions/shared_artifactory_install_artifactory_tools"
    with:
      artifactoryServiceConnection: "${{ inputs.artifactoryServiceConnection }}"
  - name: Use DotNet SDK Version ${{ inputs.sdkVersion }}
    uses: actions/setup-dotnet@v4.0.0
    with:
      dotnet-version: "${{ inputs.sdkVersion }}"
  - uses: "./.github/actions/shared_artifactory_mkdir"
    with:
      path: "${{ runner.workspace }}/.nuget/packages"
      description: create ${{ runner.workspace }}/.nuget/packages
#   # This item has no matching transformer
#   - task: Cache@2
#     displayName: Cache NuGet packages
#     condition: and(succeeded(), eq('True', ${{ inputs.enableCaching }}))
#     inputs:
#       path: "${{ runner.workspace }}/.nuget/packages"
#       cacheHitVar: CacheRestored
#       key: '"${{inputs.publishArtifact}}" | "${{ runner.os }}" | ${{ inputs.baseDirectoryForCache }}/packages.lock.json,!${{ inputs.baseDirectoryForCache }}/bin/**'
#       restoreKeys: '"${{inputs.publishArtifact}}" | "${{ runner.os }}" | ${{ inputs.baseDirectoryForCache }}/packages.lock.json,!${{ inputs.baseDirectoryForCache }}/bin/**
#
#         '
#   # This item has no matching transformer
#   - task: JFrogDotnetCore@1
#     displayName: ArtifactoryDotnetCore - Restore
#     inputs:
#       command: restore
#       artifactoryConnection: "${{inputs.artifactoryServiceConnection}}"
#       targetResolveRepo: "${{inputs.artifactoryNuGetRegistry}}"
#       rootPath: "${{ runner.workspace }}/s/${{inputs.baseDirectory}}"
#       packagesDirectory: "${{ runner.workspace }}/.nuget/packages"
#       arguments: "${{inputs.projectFile}} /property:Configuration=Release --use-lock-file --locked-mode"
  - uses: actions/upload-artifact@v3.1.3
    with:
      name: "${{ inputs.publishArtifact }}"
      path: "${{ runner.workspace }}/.nuget/packages"